{"version":3,"sources":["hooks/useForm.js","components/types/types.js","components/firebase/firebase-config.js","components/actions/uiError.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PublicRouter.js","routers/PrivateRouter.js","routers/AppRouter.js","components/reducers/uiReducer.js","store/store.js","components/reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payLoad","startLoading","startLoginEmailPassword","email","password","dispath","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","logout","LoginScreen","dispatch","useDispatch","loading","useSelector","state","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","src","alt","onClick","signInWithPopup","a","to","RegisterScreen","msjError","ui","password2","formValid","trim","length","validator","isEmail","error","Sweet","fire","icon","title","text","createUserWithEmailAndPassword","updateProfile","alert","startRegisterWithEmailPassword","AuthRouter","exact","path","component","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","NotesAppBar","NoteScreen","JournalScreen","PublicRouter","isAuthenticated","Component","rest","props","PrivateRouter","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.360453bf.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n    uiSetError: '[ui] Set Error',\n    uiRemoveError: '[ui] Remove Error',\n    uiStartLoading: '[Ui] Start Loading',\n    uiFinishLoading: '[Ui] Finish Loading'\n}","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCx_yIaV5ZxpDNVgEQ3kncv-12WzcurJPw\",\n    authDomain: \"proyecto-login-94386.firebaseapp.com\",\n    projectId: \"proyecto-login-94386\",\n    storageBucket: \"proyecto-login-94386.appspot.com\",\n    messagingSenderId: \"946878885975\",\n    appId: \"1:946878885975:web:c2d4de7b79446494b03312\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nexport { db, googleAuthProvider, firebase }","import { types } from '../types/types'\n\nexport const setError = (err) => {\n    return {\n        type: types.uiSetError,\n        payLoad: err\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: types.uiRemoveError,\n    }\n}\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n})","import { types } from '../types/types'\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { finishLoading, startLoading } from './uiError'\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispath) => {\n        return firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                dispath(startLoading)\n                dispath(login(user.uid, user.displayName))\n            })\n            .catch(e => {\n                console.log(e);\n                dispath(finishLoading())\n            })\n    }\n}\nexport const startRegisterWithEmailPassword = (email, password, name) => {\n    return (dispath) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name })\n                dispath(login(user.uid, user.displayName))\n            })\n            .catch(e => {\n                alert(\"Hay un error mi so\" + e)\n            })\n    }\n}\n\nexport const startGoogleLoginPassword = () => {\n    return (dispath) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(async({ user }) => {\n                await dispath(login(user.uid, user.displayName))\n                // console.log(user);\n            }).catch(e => {\n                console.log(e);\n            })\n    }\n}\n\nexport const login = (uid, displayName) => {\n    return {\n        type: types.login,\n        payLoad: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return (dispath) => {\n        firebase.auth().signOut()\n        dispath(logout(true))\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout,\n})","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLoginEmailPassword, startGoogleLoginPassword } from '../actions/auth'\n// import { setError, removeError } from '../actions/uiError';\n// import Sweet from 'sweetalert2'\n// import validator from 'validator';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const loading = useSelector(state => state.uid);\n    // const { msjError } = useSelector(state => state.ui)\n\n\n    const [formValues, handleInputChange] = useForm({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = formValues;\n\n    // const error = (error) => {\n    //     return (\n    //         Sweet.fire({\n    //             icon: 'error',\n    //             title: 'Oops...',\n    //             text: error,\n    //         })\n    //     )\n    // }\n\n    // const formValid = () => {\n    //     if (!validator.isEmail(email)) {\n    //         dispatch(setError('Email requerido'))\n    //         return false\n    //     }\n    //     else if (password < 5) {\n    //         dispatch(setError('La contraseña es incorecta'))\n    //         return false\n    //     }\n\n    //     dispatch(removeError(''))\n    //     return true\n    // }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        // error(msjError)\n        // if (formValid()) {\n        //     reset()\n            dispatch(startLoginEmailPassword(email, password))\n        // }\n    }\n\n    const handleGoogle = () => {\n        dispatch(startGoogleLoginPassword())\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin}>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    password={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div\n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\"\n                            onClick={handleGoogle}>\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\nimport { startRegisterWithEmailPassword } from '../actions/auth';\nimport { setError, removeError } from '../actions/uiError';\nimport Sweet from 'sweetalert2'\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch()\n    const { msjError } = useSelector(state => state.ui)\n\n    const [formValues, handleInputChange, reset] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n    const { name, email, password, password2 } = formValues\n\n    const error = (error) => {\n        return (\n            Sweet.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: error,\n            })\n        )\n    }\n\n    const formValid = () => {\n        if (name.trim().length === 0) {\n            dispatch(setError('Nombre requerido'))\n            // error('Nombre requerido')\n            return false\n        }\n        else if (!validator.isEmail(email)) {\n            dispatch(setError('Email requerido'))\n            // error('Email requerido')\n            return false\n        }\n        else if (password !== password2 || password < 5) {\n            dispatch(setError('La contraseña es incorecta'))\n            // error('La contraseña es incorecta')\n            return false\n        }\n\n        dispatch(removeError(''))\n        return true\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        error(msjError)\n        if (formValid()) {\n            reset()\n            dispatch(startRegisterWithEmailPassword(email, password, name))\n        }\n        \n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n            {/* {\n                    msjError &&\n                    (\n                        Sweet.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: msjError,\n            \n                        })\n                    )\n                } */}\n            <form onSubmit={handleRegister}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    \n                >\n                    Register\n                </button>\n\n\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const JournalEntry = () => {\n    return (\n        <div className=\"journal__entry pointer\">\n            \n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: 'url(https://earthsky.org/upl/2018/12/comet-wirtanen-Jack-Fusco-dec-2018-Anza-Borrego-desert-CA-e1544613895713.jpg)'\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    Un nuevo día\n                </p>\n                <p className=\"journal__entry-content\">\n                    Reprehenderit id in duis consectetur deserunt veniam fugiat.\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>Monday</span>\n                <h4>28</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const entries = [1,2,3,4,5 ];\n\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                entries.map( value => (\n                    <JournalEntry key={ value } />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startLogout } from '../actions/auth'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> Fernando</span>\n                </h3>\n\n                <button className=\"btn\" onClick={()=>{\n                    dispatch(startLogout())\n                }}>\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\n\nexport const NotesAppBar = () => {\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <div>\n                <button className=\"btn\">\n                    Picture\n                </button>\n\n                <button className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                ></textarea>\n\n                <div className=\"notes__image\">\n                    <img \n                        src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n                        alt=\"imagen\"\n                    />\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\n// import { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n\n            <main>\n\n                {/* <NothingSelected /> */}\n                <NoteScreen />\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        />\n    )\n}\n\nPublicRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\nPrivateRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../components/firebase/firebase-config'\nimport { login } from '../components/actions/auth';\nimport { PublicRouter } from './PublicRouter';\nimport { PrivateRouter } from './PrivateRouter';\n\nexport const AppRouter = () => {\n\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user) => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true)\n            }\n            else{\n                console.log(\"Usuario no registrado\");\n                setIsLoggedIn(false)\n            }\n            setChecking(false)\n        })\n    }, [dispatch,setChecking])\n\n    if(checking){\n        return (\n            <h1>Cargando info</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRouter\n                        exact\n                        path=\"/\"\n                        component={JournalScreen}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msjError: null\n}\n\nexport const registro = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msjError: action.payLoad\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msjError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { authReducer } from '../components/reducers/authReducer'\nimport thunk from 'redux-thunk';\nimport { registro } from '../components/reducers/uiReducer'\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: registro\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import { types } from '../types/types'\n\n// const initialState = {\n//     uid: 123,\n//     name: 'Jenny',\n//     dir: {\n//         b:12\n//     }\n// }\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payLoad.uid,\n                name: action.payLoad.displayName\n            }\n        case types.logout:\n            return { }\n\n        default:\n            return state\n    }\n}","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}